{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","getUserById","usersFromServer","find","todosFromServer","App","useState","reduce","max","todosArr","counter","setCounter","newTodo","setNewTodo","isTitle","setIsTitle","isUser","setIsUser","users","value","action","method","onSubmit","event","preventDefault","prevState","length","push","htmlFor","type","placeholder","onChange","target","Number","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f99d78be.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User,\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoListProps {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<TodoListProps> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","import './App.scss';\n\nimport { FormEventHandler, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [counter, setCounter] = useState(\n    todosFromServer.reduce((max, todosArr) => (\n      todosArr.id > max ? todosArr.id : max\n    ), 0) + 1,\n  );\n\n  const [newTodo, setNewTodo] = useState({\n    id: counter,\n    userId: 0,\n    title: '',\n    completed: false,\n    user: getUserById(1),\n  });\n\n  const [isTitle, setIsTitle] = useState(true);\n  const [isUser, setIsUser] = useState(true);\n\n  const users = usersFromServer.map(user => {\n    const { id, name } = user;\n\n    return (\n      <option value={id} key={id}>{name}</option>\n    );\n  });\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const title = event.target.value;\n\n    setIsTitle(true);\n    setNewTodo(prevState => ({\n      ...prevState,\n      title,\n    }\n    ));\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const userId = event.target.value;\n\n    setIsUser(true);\n    setNewTodo(prevState => ({\n      ...prevState,\n      userId: Number(userId),\n      user: getUserById(Number(userId)),\n    }\n    ));\n  };\n\n  const handleReset = () => {\n    setNewTodo(prevState => ({\n      ...prevState,\n      title: '',\n      userId: 0,\n    }));\n  };\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    setCounter(counter + 1);\n\n    setNewTodo(prevState => ({\n      ...prevState,\n      id: counter,\n    }\n    ));\n\n    if (newTodo.userId === 0) {\n      setIsUser(false);\n    } else {\n      setIsUser(true);\n    }\n\n    if (newTodo.title.length > 0) {\n      setIsTitle(true);\n    } else {\n      setIsTitle(false);\n    }\n\n    if (newTodo.userId > 0 && newTodo.title.length > 0) {\n      todos.push(newTodo);\n      handleReset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Ender a title\"\n            id=\"title\"\n            value={newTodo.title}\n            onChange={handleTitleChange}\n          />\n          {!isTitle\n          && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            onChange={handleUserChange}\n            defaultValue={0}\n            value={newTodo.userId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users}\n          </select>\n          {!isUser\n          && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}